import { EmbedBuilder } from 'discord.js';

export default {
  name: 'flow-diagram',
  description: 'Shows the bot flow and data structure for commands, JSON files, and cron jobs.',
  async execute(interaction) {
    const embed = new EmbedBuilder()
      .setTitle('ü§ñ Bot Flow Overview')
      .setColor(0x00ffff)
      .setDescription('A visual overview of how commands, JSON data, and cron jobs interact in the bot.')
      .addFields(
        {
          name: '1Ô∏è‚É£ Commands (commands/)',
          value: `‚Ä¢ /price, /driftmark, /drifter, /equip ‚Üí Display tier/calculation info\n` +
                 `‚Ä¢ /season-start ‚Üí View or add/update schedule events\n` +
                 `‚Ä¢ /faq ‚Üí View FAQ items\n` +
                 `‚Ä¢ /faq-add ‚Üí Add new FAQ\n` +
                 `‚Ä¢ /faq-remove ‚Üí Remove FAQ\n` +
                 `‚Ä¢ /faq-search ‚Üí Search FAQ by keyword\n` +
                 `‚Ä¢ /flow-diagram ‚Üí Show this flow diagram`,
        },
        {
          name: '2Ô∏è‚É£ Data Storage',
          value: `‚Ä¢ schedule.json ‚Üí Stores events by weekday\n` +
                 `‚Ä¢ faq.json ‚Üí Stores FAQ questions & answers`,
        },
        {
          name: '3Ô∏è‚É£ Cron Jobs (index.js)',
          value: `‚Ä¢ Daily message job ‚Üí Posts today‚Äôs schedule at 9:00 AM\n` +
                 `‚Ä¢ cronJobs[] ‚Üí Array holding all scheduled jobs\n` +
                 `‚Ä¢ /clear-cron ‚Üí Stop all jobs`,
        },
        {
          name: '4Ô∏è‚É£ Discord Interaction Flow',
          value: `‚Ä¢ User sends a slash command\n` +
                 `‚Ä¢ index.js dynamically loads commands\n` +
                 `‚Ä¢ Executes command logic\n` +
                 `‚Ä¢ Reads/writes JSON files as needed`,
        },
        {
          name: 'üåê Environment Variables',
          value: `‚Ä¢ DISCORD_TOKEN\n‚Ä¢ CLIENT_ID\n‚Ä¢ GUILD_ID\n‚Ä¢ ANNOUNCE_CHANNEL_ID`,
        },
        {
          name: 'üí° Notes',
          value: `‚Ä¢ Admin-only commands: /faq-add, /faq-remove, /season-start (with add_event)\n` +
                 `‚Ä¢ All dynamic data persists in JSON, no code edits needed for updates`,
        }
      )
      .setFooter({ text: 'Bot System Flow Diagram' });

    await interaction.reply({ embeds: [embed], ephemeral: false });
  },
};
